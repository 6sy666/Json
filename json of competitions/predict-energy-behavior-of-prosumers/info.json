{
    "name": "predict-energy-behavior-of-prosumers",
    "source": "https://www.kaggle.com/competitions/predict-energy-behavior-of-prosumers",
    "data_intro": "Your challenge in this competition is to predict the amount of electricity produced and consumed by Estonian energy customers who have installed solar panels. You'll have access to weather data, the relevant energy prices, and records of the installed photovoltaic capacity.",
    "is_splited": true,
    "overall_size": 7281774,
    "train_size": 2018352,
    "test_size": 12480,
    "c_classes": 0,
    "n_classes": 0,
    "cat_feature_intro": {
        "date": "The Estonian time in EET (UTC+2) / EEST (UTC+3). It describes the start of the 1-hour period on which target is given.",
        "forecast_date": "The date when the forecast prices should be relevant.",
        "origin_date": "The date when the day-ahead prices became available.",
        "origin_datetime": "The timestamp of when the forecast was generated.",
        "forecast_datetime": "Represents the start of the 1-hour period when the price is valid",
        "datetime": "This represents the start of the 1-hour period for which weather data are measured.",
        "county_name": "The name of the county.",
        "prediction_datetime": "The timestamp of when the forecast was generated.",
    },
    "num_feature_intro": {
        "product_type": "ID code with the following mapping of codes to contract types: {0: Combined, 1: Fixed, 2: General service, 3: Spot}.",
        "county": "An ID code for the county.",
        "eic_count": "The aggregated number of consumption points (EICs - European Identifier Code).",
        "installed_capacity": "Installed photovoltaic solar panel capacity in kilowatts.",
        "is_business": "Boolean for whether or not the customer is a business.",
        "data_block_id": "All rows sharing the same data_block_id will be available at the same forecast time. This is a function of what information is available when forecasts are actually made, at 11 AM each morning. For example, if the forecast weather data_block_id for predictins made on October 31st is 100 then the historic weather data_block_id for October 31st will be 101 as the historic weather data is only actually available the next day.",
        "euros_per_mwh": "The price of electricity on the day ahead markets in euros per megawatt hour.",
        "latitude": "The latitude of the location.",
        "longitude": "The longitude of the location.",
        "hours_ahead": "The number of hours between the forecast generation and the forecast weather. Each forecast covers 48 hours in total.",
        "temperature": "The air temperature at 2 meters above ground in degrees Celsius. Estimated for the end of the 1-hour period.",
        "dewpoint": "The dew point temperature at 2 meters above ground in degrees Celsius. Estimated for the end of the 1-hour period.",
        "cloudcover_high": "The percentage of the sky covered by clouds in the following altitude bands:6+ km. Estimated for the end of the 1-hour period.",
        "cloudcover_low": "The percentage of the sky covered by clouds in the following altitude bands: 0-2 km. Estimated for the end of the 1-hour period.",
        "cloudcover_mid": "The percentage of the sky covered by clouds in the following altitude bands: 2-6km. Estimated for the end of the 1-hour period.",
        "cloudcover_total": "The percentage of the sky covered by clouds in the following altitude bands: total. Estimated for the end of the 1-hour period.",
        "10_metre_u_wind_component": "The eastward component of wind speed measured 10 meters above surface in meters per second. Estimated for the end of the 1-hour period.",
        "10_metre_v_wind_component": "The northward component of wind speed measured 10 meters above surface in meters per second. Estimated for the end of the 1-hour period.",
        "direct_solar_radiation": "The amount of solar radiation received per unit area by a surface that is exposed to the direct rays of the sun.",
        "surface_solar_radiation_downwards": "The solar radiation, both direct and diffuse, that reaches a horizontal plane at the surface of the Earth, accumulated during the hour, in watt-hours per square meter.",
        "snowfall": "Snowfall over hour in units of meters of water equivalent.",
        "total_precipitation": "The accumulated liquid, comprising rain and snow that falls on Earth's surface over the described hour, in units of meters.",
        "lowest_price_per_mwh": "The lowest price of natural gas that on the day ahead market that trading day, in Euros per megawatt hour equivalent.",
        "highest_price_per_mwh": " The highest price of natural gas that on the day ahead market that trading day, in Euros per megawatt hour equivalent.",
        "rain": "Different from the forecast conventions. The rain from large scale weather systems of the hour in millimeters.",
        "surface_pressure": "The air pressure at surface in hectopascals.",
        "windspeed_10m": "Different from the forecast conventions. The wind speed at 10 meters above ground in meters per second.",
        "winddirection_10m": "Different from the forecast conventions. The wind direction at 10 meters above ground in degrees.",
        "shortwave_radiation": "Different from the forecast conventions. The global horizontal irradiation in watt-hours per square meter.",
        "diffuse_radiation": "Different from the forecast conventions. The diffuse solar irradiation in watt-hours per square meter.",
        "target": "The consumption or production amount for the relevant segment for the hour. The segments are defined by the county, is_business, and product_type.",
        "is_consumption": "Boolean for whether or not this row's target is consumption or production.",
        "row_id": "A unique identifier for the row.",
        "prediction_unit_id": "A unique identifier for the county, is_business, and product_type combination. New prediction units can appear or disappear in the test set.",
        "currently_scored": "currently_scored"
    },
    "evaluation_metric": "Mean Absolute Error",
    "task_type":"regression",
    "target_feature": "target",
    "example":"https://www.kaggle.com/code/syerramilli/enefit-eda-catboost-baseline#Preparing-the-data"
}